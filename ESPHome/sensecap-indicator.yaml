substitutions:
  device_name: "sensecap-indicator"
  device_friendly_name: "SenseCAP Indicator"

  api_key: "<api-key>"
  ota_key: "<ota-key>"

  wifi_ssid: !secret wifi_ssid
  wifi_password: !secret wifi_password

  # Total number of pages used to generate navigation dots and their logic (your pages + settings)
  total_pages: "2" 

  # Will draw borders around objects and labels for layouting
  ui_debug_mode: "false"

<<: !include sensecap-indicator/internal/esphome.yml
<<: !include sensecap-indicator/internal/hardware.yml


time:
  - platform: homeassistant
    id: homeassistant_time
    on_time:
      # Update clock every minute
      - seconds: 0
        then:
          - script.execute: update_time
    # And on time sync
    on_time_sync:
      then:
        - script.execute: update_time

script:
  !include sensecap-indicator/internal/scripts.yml
     
sensor:
  - platform: wifi_signal
    id: wifi_signal_db
    name: "WiFi Signal"
    update_interval: 60s
  
  - platform: copy
    id: wifi_signal_percent
    source_id: wifi_signal_db
    internal: true
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    on_value:
      - lvgl.label.update:
          id: lvgl_wifi_signal_icon
          text: !lambda |-
            static char buf[10];
            std::string icon;
            if (x == 100.0) {
                icon = "\U000F0928";
            } else if (x > 75) {
                icon = "\U000F0925";
            } else if (x > 50) {
                icon = "\U000F0922";
            } else if (x > 25) {
                icon = "\U000F091F";
            } else {
                icon = "\U000F092F";
            }
            snprintf(buf, sizeof(buf), "%s", icon.c_str());
            return buf;

binary_sensor:
  - platform: gpio
    internal: true
    id: sensecap_greenbutton
    name: "Green Button"
    pin:
      number: GPIO38
      inverted: yes
      mode:
        input: true
        pullup: true
    on_press:
      then:
        - if:
            condition: lvgl.is_paused
            then:
              - script.execute: activity_detected
            else:
              - script.execute: activity_timeout_reached
         
light:
  - platform: monochromatic
    output: ledc_gpio45
    name: Display backlight
    id: indicator_display_backlight
    entity_category: config
    restore_mode: RESTORE_AND_ON
    default_transition_length: 200ms
    on_state:
      if:
        condition:
          lambda: |-
            return !id(user_is_interacting);
        then:
          - delay: 220ms # Waiting for transition to be done so the new state is reflected. Maybe there is a better way?
          - lvgl.slider.update:
              id: lvgl_indicator_lcd_brightness_slider
              value: !lambda 'return id(indicator_display_backlight).current_values.get_brightness() * 100.0;'

switch:
  - platform: lvgl
    widget: lvgl_24h_clock_switch
    name: Use 24h hour clock
    id: use_24h_clock_switch
    entity_category: config
    internal: true
    on_turn_on:
      - globals.set:
          id: use_24h_clock
          value: 'true'
      - script.execute: update_time
    on_turn_off:
      - globals.set:
          id: use_24h_clock
          value: 'false'
      - script.execute: update_time


select:
  - platform: lvgl
    widget: lvgl_display_backlight_timeout
    name: Turn off screen after
    id: turn_off_screen_after_selector
    entity_category: config
    internal: true
    on_value:
      - globals.set:
          id: turn_off_screen_after_value
          value: !lambda "return i;"

font:
  !include sensecap-indicator/config/fonts.yaml

globals:
  - id: current_page
    type: int
    restore_value: no
    initial_value: "0"
  - id: pager_dots
    type: int[${total_pages}]
    restore_value: no
  - id: user_is_interacting
    type: bool
    initial_value: "false"
    restore_value: no
  - id: use_24h_clock
    type: bool
    initial_value: "true"
    restore_value: yes
  - id: turn_off_screen_after_value
    type: int
    initial_value: "0"
    restore_value: yes

lvgl:
  displays:
    - sensecap_display
  touchscreens:
    - sensecap_touchscreen
  
  on_idle:
    timeout: !lambda |-
      switch (id(turn_off_screen_after_value)) {
        case 0: return 600000;  // "Never" (10 min in ms / will check as a condition in the then block)
        case 1: return 60000;   // "1 min"
        case 2: return 300000;  // "5 min"
        case 3: return 900000;  // "15 min"
        default: return 600000; // Default to 10 min in case of an invalid index
      }
    then:
      - script.execute: activity_timeout_reached
          
          

  theme: !include sensecap-indicator/internal/theme/theme.yaml
  style_definitions: !include sensecap-indicator/internal/theme/style_definitions.yaml

  top_layer:
    widgets:
      # TOP BAR
      - !include sensecap-indicator/internal/templates/top_bar.yaml
      - !include sensecap-indicator/internal/templates/bottom_pager.yaml
      - !include sensecap-indicator/internal/templates/bottom_pager_tap_area.yaml
  pages:
    - id: first_page
      bg_color: 0x1b1b1b
      bg_opa: COVER
      widgets:
        # PAGE TITLE
        - !include
            file: sensecap-indicator/internal/templates/page_title.yaml
            vars:
              title: "Heating Control"
        - obj:
            styles: content_container
            layout: 
              type: FLEX
              flex_flow: ROW_WRAP
              flex_align_main: LV_FLEX_ALIGN_START
              flex_align_cross: CENTER
            widgets:
              - !include
                  file: sensecap-indicator/internal/templates/tiles/info_tile.yaml
                  vars:
                    tile_icon: "\U000F02E3"
                    tile_value: "20.5"
                    tile_unit: "°C"
                    tile_subtitle: "Bedroom"
              - !include
                  file: sensecap-indicator/internal/templates/tiles/info_tile.yaml
                  vars:
                    tile_icon: "\U000F04B9"
                    tile_value: "18.0"
                    tile_unit: "°C"
                    tile_subtitle: "Living Room"
              - !include
                  file: sensecap-indicator/internal/templates/tiles/info_tile.yaml
                  vars:
                    tile_icon: "\U000F09A0"
                    tile_value: "23.1"
                    tile_unit: "°C"
                    tile_subtitle: "Bathroom"
              - !include
                  file: sensecap-indicator/internal/templates/tiles/info_tile.yaml
                  vars:
                    tile_icon: "\U000F09AB"
                    tile_value: "17.5"
                    tile_unit: "°C"
                    tile_subtitle: "Toilet"
              - !include
                  file: sensecap-indicator/internal/templates/tiles/info_tile.yaml
                  vars:
                    tile_icon: "\U000F0821"
                    tile_value: "19.4"
                    tile_unit: "°C"
                    tile_subtitle: "Corridor"

    - !include sensecap-indicator/internal/templates/pages/settings.yaml